// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: access_token.sql

package queries

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createAccessToken = `-- name: CreateAccessToken :one
INSERT INTO access_tokens (id, user_id, token_identifier, issued_at, expires_at)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, user_id, token_identifier, issued_at, expires_at, revoked_at
`

type CreateAccessTokenParams struct {
	ID              uuid.UUID `json:"id"`
	UserID          uuid.UUID `json:"user_id"`
	TokenIdentifier uuid.UUID `json:"token_identifier"`
	IssuedAt        time.Time `json:"issued_at"`
	ExpiresAt       time.Time `json:"expires_at"`
}

func (q *Queries) CreateAccessToken(ctx context.Context, arg CreateAccessTokenParams) (AccessToken, error) {
	row := q.queryRow(ctx, q.createAccessTokenStmt, createAccessToken,
		arg.ID,
		arg.UserID,
		arg.TokenIdentifier,
		arg.IssuedAt,
		arg.ExpiresAt,
	)
	var i AccessToken
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.TokenIdentifier,
		&i.IssuedAt,
		&i.ExpiresAt,
		&i.RevokedAt,
	)
	return i, err
}
